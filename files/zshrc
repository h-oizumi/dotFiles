setopt prompt_subst
local p_color_orange=$'%{\e[38;5;215m%}'
local p_color_reset=$'%{\e[m%}'

local p_cdir_color_fg=$'%{\e[38;5;15m%}'
local p_cdir_color_bg=$'%{\e[48;5;17m%}'
local p_cdir_end_color_fg=$'%{\e[38;5;17m%}'
local p_cdir_end_color_bg=$'%{\e[48;5;0m%}'
local p_cdir="$p_cdir_color_bg%F{blue}⮀%f %d $p_cdir_end_color_fg"
local p_cdir_full="[%F{green}%~%f]"
local p_cdir_end="$p_cdir_end_color_bg⮀"$'\n'

# local p_host="FFR-41MR"
#
local p_host="$p_color_orange%m$p_color_reset"
local p_user="$p_color_orange%n$p_color_reset"
local p_info="%F{red}⮑ %f $p_user@$p_host"
# local p_info="%F{red}♺ %f $p_user@$p_host"
local p_mark="%B%(!,#,$)%b"
# local p_mark="%#"

# 環境変数 SSH_CLIENT があるかチェックする
if [[ -z ${SSH_CLIENT} ]]; then
	local p_remote=""
else
	local p_remote="[%F{green}SSH%f]"
fi
local p_base="$p_info$p_remote:$p_mark "
source $HOME/.zsh/git-prompt.zsh
PROMPT=$p_cdir$p_cdir_end$p_base
# RPROMPT="$p_cdir_full"

autoload -U compinit
compinit -u

# zsh completion になってないやつ
if [ -e $HOME/.homebrew/etc/bash_completion.d ]; then
	source $HOME/.homebrew/etc/bash_completion.d/tig-completion.bash
fi

zstyle ':completion:*' list-colors 'di=36' 'ln=35' 'ex=31'
zstyle ':completion:*:default' menu select=1
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z} r:|[.]=**'

alias ls="ls -GFh"
alias ll="ls -l"
alias la="ls -al"
alias cpanm="sudo cpanm"
alias tma="tmux a"
alias ping="ping -t 3"
alias w3m="cd $HOME;WWW_HOME='google.co.jp' w3m; cd -;"
alias ltail="less +F"
alias dmg_mount="hdiutil attach"

setopt hist_ignore_dups
setopt share_history
setopt auto_pushd
setopt extended_history
setopt auto_remove_slash
setopt correct
setopt complete_aliases
setopt transient_rprompt

eval "$(rbenv init -)"
export PYENV_ROOT="$HOME/.pyenv"
eval "$(pyenv init -)"

function llast(){
	if ls /var/tmp/.last_log* > /dev/null 2>&1; then
		cat $HOME/.last_log /var/tmp/.last_log* | tail -r $* | less
	else
		tail -r $* $HOME/.last_log | less
	fi
}

function gem(){
	$HOME/.rbenv/shims/gem $*
	if [ "$1" = "install" ] || [ "$1" = "i" ] || [ "$1" = "uninstall" ] || [ "$1" = "uni" ]; then
		rbenv rehash
		rehash
	fi
}

# for Mac OS X
case ${OSTYPE} in darwin*)
	alias tmux="SHELL=$HOME/.homebrew/bin/zsh tmux"
	source "$HOME/.homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"

	function brew(){
		$HOME/.homebrew/bin/brew $*
		if [ "$1" = "install" ] || [ "$1" = "upgrade" ] || [ "$1" = "uninstall" ]; then
			rehash
		fi
	}

	# MacVIM
	# if [ -e /Applications/MacVim.app ]; then
	# 	alias vi="env LANG=ja_JP.UTF-8   /Applications/MacVim.app/Contents/MacOS/Vim \"\$@\""
	# 	alias vim="env LANG=ja_JP.UTF-8  /Applications/MacVim.app/Contents/MacOS/Vim \"\$@\""
	# 	alias view="env LANG=ja_JP.UTF-8 /Applications/MacVim.app/Contents/MacOS/Vim -R \"\$@\""
	# fi

	# hub
	# eval "$(hub alias -s)"

	function gvim(){
		if [ "$#" -eq 0 ]; then
			env LANG=ja_JP.UTF-8 gvim >> /dev/null
		else
			env LANG=ja_JP.UTF-8 gvim --remote-tab-silent $@ >> /dev/null
		fi
	}
	;;
esac

# for python
export PYTHON_CONFIGURE_OPTS='--enable-unicode=ucs4'


typeset -U path cdpath fpath manpath

ulimit -n 1024
